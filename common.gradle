allprojects {
    group = "com.r3.conclave"
    version = conclave_version
}

subprojects {
    tasks.withType(AbstractCompile) {
        if (it.class.name.startsWith('org.jetbrains.kotlin.gradle.tasks.KotlinCompile')) {
            kotlinOptions {
                freeCompilerArgs = ['-Xjvm-default=all']
                javaParameters = true
            }
        }
    }

    tasks.withType(Test) {
        useJUnitPlatform()

        systemProperty 'java.io.tmpdir', buildDir.absolutePath

        failFast = true
        testLogging {
            exceptionFormat = 'full'
            showStandardStreams = true
        }

        beforeTest { descriptor ->
            logger.lifecycle("Starting> {}.{} ({})", descriptor.classDisplayName, descriptor.displayName, descriptor.id)
        }
        afterTest { descriptor ->
            logger.lifecycle("Ending> {}.{} ({})", descriptor.classDisplayName, descriptor.displayName, descriptor.id)
        }
    }
    tasks.withType(Jar) {

        metaInf {
            from(project.rootDir) {
                include 'LICENSE'
                include 'NOTICE.md'
            }
        }
    }
}

wrapper {
    distributionType = Wrapper.DistributionType.ALL
}
