loader.entrypoint = "file:{{ gramine.libos }}"
libos.entrypoint = "{{ java_home }}/bin/java"
loader.log_level = "error"

# TODO: remove this when in production
loader.insecure__use_cmdline_argv = true

# TODO: add DCAP attestation
sgx.remote_attestation = false
# sgx.ra_client_spid = ""

# This sets an environment variables used by the dynamic loader
loader.env.LD_LIBRARY_PATH = "/lib:{{ arch_libdir }}:/usr{{ arch_libdir }}:/usr/lib:{{ python_packages_path }}/jep"
loader.env.LD_PRELOAD = "{{ ld_preload }}"
loader.env.PYTHONPATH = "{{ python_packages_path }}"

fs.mounts = [
  { path = "/lib",                       uri = "file:{{ gramine.runtimedir() }}" },
  { path = "{{ arch_libdir }}",          uri = "file:{{ arch_libdir }}" },
  { path = "{{ java_home }}",            uri = "file:{{ java_home }}" },
  { path = "{{ python_packages_path }}", uri = "file:{{ python_packages_path }}" },
  { path = "/usr{{ arch_libdir }}",      uri = "file:/usr{{ arch_libdir }}" },
  { path = "/usr/lib",                   uri = "file:/usr/lib" },
  { path = "/tmp",                       type = "tmpfs" },
]

sgx.enclave_size = "4G"

sgx.thread_num = {{ maxThreads }}

sgx.trusted_files = [
  "file:{{ java_home }}/bin/java",
  "file:{{ gramine.runtimedir() }}/"
]

