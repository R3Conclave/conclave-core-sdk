plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.4'
    id "io.spring.dependency-management" version "1.1.0"
}

// Define a Gradle flag "enclaveMode" which controls which enclave mode to use when building the host. The default is
// mock. See https://github.com/R3Conclave/conclave-core-sdk/wiki/Run-an-enclave#beyond-mock-mode for more details.
def mode = findProperty("enclaveMode")?.toString()?.toLowerCase() ?: "mock"

// Creates a task that can be used for generating signing materials. This is optional, but we use it to create a more
// secure signature in release mode. See https://github.com/R3Conclave/conclave-core-sdk/wiki/Enclave-Signing for more information.
tasks.register("prepareForSigning") {
    it.dependsOn(":enclave:generateEnclaveSigningMaterial${mode.capitalize()}")
}

dependencies {
    // Change this to your preferred logging framework
    runtimeOnly 'ch.qos.logback:logback-classic'
    runtimeOnly project(path: ":enclave", configuration: mode)
    runtimeOnly "com.r3.conclave:conclave-web-host:$conclaveVersion"
}

springBoot {
    // Use the provided main method for the web host.
    mainClass.set("com.r3.conclave.host.web.EnclaveWebHost")
}

bootJar {
    // Include the enclave mode in the filename for clarity.
    archiveClassifier.set(mode)
}
