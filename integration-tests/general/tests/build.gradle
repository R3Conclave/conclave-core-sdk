plugins {
    id 'org.jetbrains.kotlin.jvm'
}

configurations {
    kds
}

dependencies {
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    testImplementation "com.r3.conclave:conclave-enclave:$conclave_version"
    testImplementation "com.fasterxml.jackson.core:jackson-databind:$jackson_version"
    testImplementation "net.fornwall:jelf:$jelf_version"
    testImplementation "org.junit.jupiter:junit-jupiter:$junit_jupiter_version"
    testImplementation "org.junit-pioneer:junit-pioneer:$junit_pioneer_version"
    testImplementation "org.assertj:assertj-core:$assertj_version"
    testImplementation project(":general:common")
    testImplementation project(":general:common-test")
    testRuntimeOnly project(path: ":general:default-enclave", configuration: enclaveMode)
    testRuntimeOnly project(path: ":general:persisting-enclave", configuration: enclaveMode)
    testRuntimeOnly project(path: ":general:threadsafe-enclave", configuration: enclaveMode)
    testRuntimeOnly project(path: ":general:threadsafe-enclave-same-signer", configuration: enclaveMode)
    testRuntimeOnly project(path: ":general:filesystem-db-enclave", configuration: enclaveMode)
    testRuntimeOnly "org.slf4j:slf4j-simple:$slf4j_version"
    kds "com.r3.conclave:kds-simulation:$kds_version" // Use the simulation KDS for testing
}

test {
    doFirst {
        systemProperty "enclaveMode", enclaveMode
        systemProperty "kdsJar", configurations.kds.asPath
    }
}
